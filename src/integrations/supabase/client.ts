
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yiwbtrwfyygzhhsjcaqi.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inlpd2J0cndmeXlnemhoc2pjYXFpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2Mjk4NDEsImV4cCI6MjA1ODIwNTg0MX0.120qLHBT6_pPVL3g6tNOesL3n_HL4py9lZVgqF1mg3I";

// Create a configured Supabase client with options
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true
    },
    global: {
      headers: {
        'Content-Type': 'application/json'
      }
    }
  }
);

// Helper function to ensure UUIDs are valid
export const validateUUID = (id: string): boolean => {
  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
  return uuidRegex.test(id);
};

// Generate a deterministic UUID from a string
export const generateDeterministicUUID = (text: string): string => {
  const cleanText = text.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();
  const paddedText = cleanText.padStart(32, '0');
  
  // Format as UUID
  return [
    paddedText.substring(0, 8),
    paddedText.substring(8, 12),
    paddedText.substring(12, 16),
    paddedText.substring(16, 20),
    paddedText.substring(20, 32)
  ].join('-');
};
